from azure.identity import DefaultAzureCredential  
from azure.mgmt.authorization import AuthorizationManagementClient  
from azure.mgmt.keyvault import KeyVaultManagementClient  
from azure.mgmt.keyvault.models import Permissions, SecretPermissions, AccessPolicyEntry, VaultProperties  
from azure.mgmt.compute import ComputeManagementClient  
  
# Set your Azure subscription ID and resource group name  
subscription_id = 'your_subscription_id'  
resource_group_name = 'your_resource_group_name'  
  
# Set the name for the Managed Identity and Key Vault  
managed_identity_name = 'your_managed_identity_name'  
key_vault_name = 'your_key_vault_name'  
  
# Create the Azure Managed Identity  
credential = DefaultAzureCredential()  
identity_client = ComputeManagementClient(credential, subscription_id)  
identity = identity_client.virtual_machine_scale_set_vm_extensions.create_or_update(  
    resource_group_name=resource_group_name,  
    vm_scale_set_name='your_vm_scale_set_name',  
    vm_index='your_vm_index',  
    vm_extension_name='ManagedIdentityExtension',  
    extension_parameters={  
        'location': 'your_vm_location',  
        'publisher': 'Microsoft.ManagedIdentity',  
        'type': 'ManagedIdentityExtensionForLinux',  
        'type_handler_version': '1.0',  
        'auto_upgrade_minor_version': True,  
        'settings': {  
            'port': '50342'  
        }  
    }  
).identity  
  
# Grant permissions to the Managed Identity to read and write secrets to the Key Vault  
keyvault_client = KeyVaultManagementClient(credential, subscription_id)  
access_policy = AccessPolicyEntry(  
    tenant_id='your_tenant_id',  
    object_id=identity.principal_id,  
    permissions=Permissions(  
        secrets=[SecretPermissions.get, SecretPermissions.list, SecretPermissions.set]  
    )  
)  
keyvault_client.vaults.create_or_update(  
    resource_group_name=resource_group_name,  
    vault_name=key_vault_name,  
    parameters=VaultProperties(  
        access_policies=[access_policy]  
    )  
)  
  
# Grant the Managed Identity the ability to register an Azure AD app  
authorization_client = AuthorizationManagementClient(credential, subscription_id)  
role_definition_id = '/subscriptions/{}/providers/Microsoft.Authorization/roleDefinitions/00000000-0000-0000-0000-000000000000'  # Replace with the appropriate role definition ID  
authorization_client.role_assignments.create(  
    scope=identity.id,  
    role_definition_id=role_definition_id,  
    principal_id=identity.principal_id  
)  
